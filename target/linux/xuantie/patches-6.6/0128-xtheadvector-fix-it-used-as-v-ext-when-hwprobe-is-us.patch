From a17e918e9e4db82b460b8134498c0aef41bfd69f Mon Sep 17 00:00:00 2001
From: Han Gao <gaohan@iscas.ac.cn>
Date: Mon, 10 Jun 2024 18:55:40 +0800
Subject: [PATCH 128/129] xtheadvector: fix it used as v-ext when hwprobe is
 used

Signed-off-by: Han Gao <gaohan@iscas.ac.cn>
---
 arch/riscv/include/asm/vector.h | 6 ++++++
 arch/riscv/kernel/sys_riscv.c   | 2 +-
 2 files changed, 7 insertions(+), 1 deletion(-)

--- a/arch/riscv/include/asm/vector.h
+++ b/arch/riscv/include/asm/vector.h
@@ -30,6 +30,11 @@ static __always_inline bool has_vector(v
 	  riscv_has_extension_unlikely(RISCV_ISA_EXT_XTHEADVECTOR);
 }
 
+static __always_inline bool has_xtheadvector(void)
+{
+        return riscv_has_extension_unlikely(RISCV_ISA_EXT_XTHEADVECTOR);
+}
+
 static inline void __riscv_v_vstate_clean(struct pt_regs *regs)
 {
 	unsigned long sr_vs, sr_vs_clean;
@@ -298,6 +303,7 @@ struct pt_regs;
 
 static inline int riscv_v_setup_vsize(void) { return -EOPNOTSUPP; }
 static __always_inline bool has_vector(void) { return false; }
+static __always_inline bool has_xtheadvector(void) { return false; }
 static inline bool riscv_v_first_use_handler(struct pt_regs *regs) { return false; }
 static inline bool riscv_v_vstate_query(struct pt_regs *regs) { return false; }
 static inline bool riscv_v_vstate_ctrl_user_allowed(void) { return false; }
--- a/arch/riscv/kernel/sys_riscv.c
+++ b/arch/riscv/kernel/sys_riscv.c
@@ -135,7 +135,7 @@ static void hwprobe_isa_ext0(struct risc
 	if (riscv_isa_extension_available(NULL, c))
 		pair->value |= RISCV_HWPROBE_IMA_C;
 
-	if (has_vector())
+	if (has_vector() && !has_xtheadvector())
 		pair->value |= RISCV_HWPROBE_IMA_V;
 
 	/*
